import java.util.Arrays;
import java.util.Scanner;
    static Scanner sc = new Scanner(System.in);
    static String[][] board = new String[6][7];
    public static void main(String[] args) {
        for(int i = 0; i < board.length ; i++){
            Arrays.fill(board[i], " ");
        }
        System.out.println(tablero());
        while(!ganador(board)){
            System.out.println("Di una posicion x e y con un numero entero de 2 cifras");
            int n = sc.nextInt();
            board[n/10][n%10] = "R";
            System.out.println(tablero());
        }
    }
    static boolean ganador(String[][] board){
        try{
            for(int i = 0 ; i < 3 ; i++){
                for(int j = 0 ; j < 4 ; j++){
                    if(!board[i][j].equals(" ")){
                        if(board[i][j].equals(board[i + 1][j + 1]) && board[i][j].equals(board[i + 2][j + 2]) && board[i][j].equals(board[i + 3][j + 3]) //Comprova diagonals descendents
                            || board[i][board[i].length - 1].equals(board[i + 1][board[i].length - 2]) 
                            && board[i][board[i].length - 1].equals(board[i + 2][board[i].length - 3]) && board[i][board[i].length - 1].equals(board[i + 3][board[i].length - 4])//2 linees, comprova diagonals ascendents
                            || board[j][i].equals(board[j + 1][i]) && board[j][i].equals(board[j + 2][i]) && board[j][i].equals(board[j + 3][i])//comprova primer eix)
                            || board[i][j].equals(board[i][j + 1]) && board[i][j].equals(board[i][j + 2]) && board[i][j].equals(board[i][j + 3])){//comprova segon eix
                                return true;
                        }
                    }
                }
            }
        }catch(IndexOutOfBoundsException e){
            
        }
        return false;
    }
    static String fileresDibuix(){
        String a ="  ";
        for(int i = 0 ; i < 29 ; i++){
            a += "-";
        }
        a += "\n";
        return a;
    }
    static String columnesDibuix(String board[]){
        String a = "";
        
        for (int i = 0 ; i < board.length; i++){
            a += "| " + board[i]+ " ";
        }
        a += "|\n";
        return a;
    }
    static String tablero(){
        String a = "";
        for(int i = 0 ; i < 6 ; i ++){
            int n = 65 + i;
            char c = (char) n;
            a += fileresDibuix();
            a += c + " " + columnesDibuix(board[i]);
        }
        a += fileresDibuix();
        return a;
    }
    static boolean casillaOcupada(String board[][], int casilla[]){
        if(!board[casilla[0]][casilla[1]].equals(" ")){
            return true;
        }
        return false;
    }
